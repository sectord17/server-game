// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var Assets = Assets || {};

/**
 * @const
 * @namespace
 */
Assets.Code = Assets.Code || {};

/**
 * @const
 * @namespace
 */
Assets.Code.Remote = Assets.Code.Remote || {};

/**
 * @constructor
 */
Assets.Code.Remote.LoginMsg = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Assets.Code.Remote.LoginMsg}
 */
Assets.Code.Remote.LoginMsg.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Assets.Code.Remote.LoginMsg=} obj
 * @returns {Assets.Code.Remote.LoginMsg}
 */
Assets.Code.Remote.LoginMsg.getRootAsLoginMsg = function(bb, obj) {
  return (obj || new Assets.Code.Remote.LoginMsg).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {boolean}
 */
Assets.Code.Remote.LoginMsg.bufferHasIdentifier = function(bb) {
  return bb.__has_identifier('SERV');
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Assets.Code.Remote.LoginMsg.prototype.token = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Assets.Code.Remote.LoginMsg.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Assets.Code.Remote.LoginMsg.startLoginMsg = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} tokenOffset
 */
Assets.Code.Remote.LoginMsg.addToken = function(builder, tokenOffset) {
  builder.addFieldOffset(0, tokenOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
Assets.Code.Remote.LoginMsg.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Assets.Code.Remote.LoginMsg.endLoginMsg = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
Assets.Code.Remote.LoginMsg.finishLoginMsgBuffer = function(builder, offset) {
  builder.finish(offset, 'SERV');
};

// Exports for Node.js and RequireJS
this.Assets = Assets;

// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var Assets = Assets || {};

/**
 * @const
 * @namespace
 */
Assets.Code = Assets.Code || {};

/**
 * @const
 * @namespace
 */
Assets.Code.Remote = Assets.Code.Remote || {};

/**
 * @const
 * @namespace
 */
Assets.Code.Remote.Flat = Assets.Code.Remote.Flat || {};

/**
 * @constructor
 */
Assets.Code.Remote.Flat.UdpReceived = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Assets.Code.Remote.Flat.UdpReceived}
 */
Assets.Code.Remote.Flat.UdpReceived.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Assets.Code.Remote.Flat.UdpReceived=} obj
 * @returns {Assets.Code.Remote.Flat.UdpReceived}
 */
Assets.Code.Remote.Flat.UdpReceived.getRootAsUdpReceived = function(bb, obj) {
  return (obj || new Assets.Code.Remote.Flat.UdpReceived).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {boolean}
 */
Assets.Code.Remote.Flat.UdpReceived.bufferHasIdentifier = function(bb) {
  return bb.__has_identifier('UDPR');
};

/**
 * @returns {number}
 */
Assets.Code.Remote.Flat.UdpReceived.prototype.playerId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Assets.Code.Remote.Flat.UdpReceived.startUdpReceived = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playerId
 */
Assets.Code.Remote.Flat.UdpReceived.addPlayerId = function(builder, playerId) {
  builder.addFieldInt32(0, playerId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Assets.Code.Remote.Flat.UdpReceived.endUdpReceived = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
Assets.Code.Remote.Flat.UdpReceived.finishUdpReceivedBuffer = function(builder, offset) {
  builder.finish(offset, 'UDPR');
};

// Exports for Node.js and RequireJS
this.Assets = Assets;

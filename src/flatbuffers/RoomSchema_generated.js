// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var Assets = Assets || {};

/**
 * @const
 * @namespace
 */
Assets.Code = Assets.Code || {};

/**
 * @const
 * @namespace
 */
Assets.Code.Remote = Assets.Code.Remote || {};

/**
 * @const
 * @namespace
 */
Assets.Code.Remote.Flat = Assets.Code.Remote.Flat || {};

/**
 * @enum
 */
Assets.Code.Remote.Flat.Team = {
  Red: 0,
  Blue: 1
};

/**
 * @enum
 */
Assets.Code.Remote.Flat.GameStatus = {
  Start: 0,
  InProgress: 1,
  Finish: 2
};

/**
 * @enum
 */
Assets.Code.Remote.Flat.RoomData = {
  NONE: 0,
  RoomInfo: 1,
  PlayerConnected: 2,
  PlayerDisconnected: 3,
  ChangeTeam: 4,
  TeamChanged: 5,
  PlayerReady: 6,
  MeReady: 7,
  GameStatusChanged: 8
};

/**
 * @constructor
 */
Assets.Code.Remote.Flat.PlayerInfo = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Assets.Code.Remote.Flat.PlayerInfo}
 */
Assets.Code.Remote.Flat.PlayerInfo.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Assets.Code.Remote.Flat.PlayerInfo=} obj
 * @returns {Assets.Code.Remote.Flat.PlayerInfo}
 */
Assets.Code.Remote.Flat.PlayerInfo.getRootAsPlayerInfo = function(bb, obj) {
  return (obj || new Assets.Code.Remote.Flat.PlayerInfo).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Assets.Code.Remote.Flat.PlayerInfo.prototype.playerId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Assets.Code.Remote.Flat.PlayerInfo.prototype.nick = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {boolean}
 */
Assets.Code.Remote.Flat.PlayerInfo.prototype.isReady = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {Assets.Code.Remote.Flat.Team}
 */
Assets.Code.Remote.Flat.PlayerInfo.prototype.team = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? /** @type {Assets.Code.Remote.Flat.Team} */ (this.bb.readInt8(this.bb_pos + offset)) : Assets.Code.Remote.Flat.Team.Red;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Assets.Code.Remote.Flat.PlayerInfo.startPlayerInfo = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playerId
 */
Assets.Code.Remote.Flat.PlayerInfo.addPlayerId = function(builder, playerId) {
  builder.addFieldInt32(0, playerId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nickOffset
 */
Assets.Code.Remote.Flat.PlayerInfo.addNick = function(builder, nickOffset) {
  builder.addFieldOffset(1, nickOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isReady
 */
Assets.Code.Remote.Flat.PlayerInfo.addIsReady = function(builder, isReady) {
  builder.addFieldInt8(2, +isReady, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Assets.Code.Remote.Flat.Team} team
 */
Assets.Code.Remote.Flat.PlayerInfo.addTeam = function(builder, team) {
  builder.addFieldInt8(3, team, Assets.Code.Remote.Flat.Team.Red);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Assets.Code.Remote.Flat.PlayerInfo.endPlayerInfo = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Assets.Code.Remote.Flat.RoomInfo = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Assets.Code.Remote.Flat.RoomInfo}
 */
Assets.Code.Remote.Flat.RoomInfo.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Assets.Code.Remote.Flat.RoomInfo=} obj
 * @returns {Assets.Code.Remote.Flat.RoomInfo}
 */
Assets.Code.Remote.Flat.RoomInfo.getRootAsRoomInfo = function(bb, obj) {
  return (obj || new Assets.Code.Remote.Flat.RoomInfo).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {Assets.Code.Remote.Flat.PlayerInfo=} obj
 * @returns {Assets.Code.Remote.Flat.PlayerInfo}
 */
Assets.Code.Remote.Flat.RoomInfo.prototype.players = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Assets.Code.Remote.Flat.PlayerInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Assets.Code.Remote.Flat.RoomInfo.prototype.playersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Assets.Code.Remote.Flat.RoomInfo.startRoomInfo = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} playersOffset
 */
Assets.Code.Remote.Flat.RoomInfo.addPlayers = function(builder, playersOffset) {
  builder.addFieldOffset(0, playersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Assets.Code.Remote.Flat.RoomInfo.createPlayersVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Assets.Code.Remote.Flat.RoomInfo.startPlayersVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Assets.Code.Remote.Flat.RoomInfo.endRoomInfo = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Assets.Code.Remote.Flat.PlayerConnected = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Assets.Code.Remote.Flat.PlayerConnected}
 */
Assets.Code.Remote.Flat.PlayerConnected.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Assets.Code.Remote.Flat.PlayerConnected=} obj
 * @returns {Assets.Code.Remote.Flat.PlayerConnected}
 */
Assets.Code.Remote.Flat.PlayerConnected.getRootAsPlayerConnected = function(bb, obj) {
  return (obj || new Assets.Code.Remote.Flat.PlayerConnected).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Assets.Code.Remote.Flat.PlayerConnected.prototype.playerId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Assets.Code.Remote.Flat.PlayerConnected.prototype.nick = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {Assets.Code.Remote.Flat.Team}
 */
Assets.Code.Remote.Flat.PlayerConnected.prototype.team = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? /** @type {Assets.Code.Remote.Flat.Team} */ (this.bb.readInt8(this.bb_pos + offset)) : Assets.Code.Remote.Flat.Team.Red;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Assets.Code.Remote.Flat.PlayerConnected.startPlayerConnected = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playerId
 */
Assets.Code.Remote.Flat.PlayerConnected.addPlayerId = function(builder, playerId) {
  builder.addFieldInt32(0, playerId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nickOffset
 */
Assets.Code.Remote.Flat.PlayerConnected.addNick = function(builder, nickOffset) {
  builder.addFieldOffset(1, nickOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Assets.Code.Remote.Flat.Team} team
 */
Assets.Code.Remote.Flat.PlayerConnected.addTeam = function(builder, team) {
  builder.addFieldInt8(2, team, Assets.Code.Remote.Flat.Team.Red);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Assets.Code.Remote.Flat.PlayerConnected.endPlayerConnected = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Assets.Code.Remote.Flat.PlayerDisconnected = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Assets.Code.Remote.Flat.PlayerDisconnected}
 */
Assets.Code.Remote.Flat.PlayerDisconnected.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Assets.Code.Remote.Flat.PlayerDisconnected=} obj
 * @returns {Assets.Code.Remote.Flat.PlayerDisconnected}
 */
Assets.Code.Remote.Flat.PlayerDisconnected.getRootAsPlayerDisconnected = function(bb, obj) {
  return (obj || new Assets.Code.Remote.Flat.PlayerDisconnected).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Assets.Code.Remote.Flat.PlayerDisconnected.prototype.playerId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Assets.Code.Remote.Flat.PlayerDisconnected.startPlayerDisconnected = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playerId
 */
Assets.Code.Remote.Flat.PlayerDisconnected.addPlayerId = function(builder, playerId) {
  builder.addFieldInt32(0, playerId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Assets.Code.Remote.Flat.PlayerDisconnected.endPlayerDisconnected = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Assets.Code.Remote.Flat.ChangeTeam = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Assets.Code.Remote.Flat.ChangeTeam}
 */
Assets.Code.Remote.Flat.ChangeTeam.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Assets.Code.Remote.Flat.ChangeTeam=} obj
 * @returns {Assets.Code.Remote.Flat.ChangeTeam}
 */
Assets.Code.Remote.Flat.ChangeTeam.getRootAsChangeTeam = function(bb, obj) {
  return (obj || new Assets.Code.Remote.Flat.ChangeTeam).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Assets.Code.Remote.Flat.ChangeTeam.prototype.playerId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {Assets.Code.Remote.Flat.Team}
 */
Assets.Code.Remote.Flat.ChangeTeam.prototype.team = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {Assets.Code.Remote.Flat.Team} */ (this.bb.readInt8(this.bb_pos + offset)) : Assets.Code.Remote.Flat.Team.Red;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Assets.Code.Remote.Flat.ChangeTeam.startChangeTeam = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playerId
 */
Assets.Code.Remote.Flat.ChangeTeam.addPlayerId = function(builder, playerId) {
  builder.addFieldInt32(0, playerId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Assets.Code.Remote.Flat.Team} team
 */
Assets.Code.Remote.Flat.ChangeTeam.addTeam = function(builder, team) {
  builder.addFieldInt8(1, team, Assets.Code.Remote.Flat.Team.Red);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Assets.Code.Remote.Flat.ChangeTeam.endChangeTeam = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Assets.Code.Remote.Flat.TeamChanged = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Assets.Code.Remote.Flat.TeamChanged}
 */
Assets.Code.Remote.Flat.TeamChanged.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Assets.Code.Remote.Flat.TeamChanged=} obj
 * @returns {Assets.Code.Remote.Flat.TeamChanged}
 */
Assets.Code.Remote.Flat.TeamChanged.getRootAsTeamChanged = function(bb, obj) {
  return (obj || new Assets.Code.Remote.Flat.TeamChanged).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Assets.Code.Remote.Flat.TeamChanged.prototype.playerId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {Assets.Code.Remote.Flat.Team}
 */
Assets.Code.Remote.Flat.TeamChanged.prototype.team = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {Assets.Code.Remote.Flat.Team} */ (this.bb.readInt8(this.bb_pos + offset)) : Assets.Code.Remote.Flat.Team.Red;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Assets.Code.Remote.Flat.TeamChanged.startTeamChanged = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playerId
 */
Assets.Code.Remote.Flat.TeamChanged.addPlayerId = function(builder, playerId) {
  builder.addFieldInt32(0, playerId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Assets.Code.Remote.Flat.Team} team
 */
Assets.Code.Remote.Flat.TeamChanged.addTeam = function(builder, team) {
  builder.addFieldInt8(1, team, Assets.Code.Remote.Flat.Team.Red);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Assets.Code.Remote.Flat.TeamChanged.endTeamChanged = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Assets.Code.Remote.Flat.PlayerReady = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Assets.Code.Remote.Flat.PlayerReady}
 */
Assets.Code.Remote.Flat.PlayerReady.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Assets.Code.Remote.Flat.PlayerReady=} obj
 * @returns {Assets.Code.Remote.Flat.PlayerReady}
 */
Assets.Code.Remote.Flat.PlayerReady.getRootAsPlayerReady = function(bb, obj) {
  return (obj || new Assets.Code.Remote.Flat.PlayerReady).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Assets.Code.Remote.Flat.PlayerReady.prototype.playerId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {boolean}
 */
Assets.Code.Remote.Flat.PlayerReady.prototype.isReady = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Assets.Code.Remote.Flat.PlayerReady.startPlayerReady = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playerId
 */
Assets.Code.Remote.Flat.PlayerReady.addPlayerId = function(builder, playerId) {
  builder.addFieldInt32(0, playerId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isReady
 */
Assets.Code.Remote.Flat.PlayerReady.addIsReady = function(builder, isReady) {
  builder.addFieldInt8(1, +isReady, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Assets.Code.Remote.Flat.PlayerReady.endPlayerReady = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Assets.Code.Remote.Flat.MeReady = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Assets.Code.Remote.Flat.MeReady}
 */
Assets.Code.Remote.Flat.MeReady.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Assets.Code.Remote.Flat.MeReady=} obj
 * @returns {Assets.Code.Remote.Flat.MeReady}
 */
Assets.Code.Remote.Flat.MeReady.getRootAsMeReady = function(bb, obj) {
  return (obj || new Assets.Code.Remote.Flat.MeReady).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {boolean}
 */
Assets.Code.Remote.Flat.MeReady.prototype.isReady = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Assets.Code.Remote.Flat.MeReady.startMeReady = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isReady
 */
Assets.Code.Remote.Flat.MeReady.addIsReady = function(builder, isReady) {
  builder.addFieldInt8(0, +isReady, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Assets.Code.Remote.Flat.MeReady.endMeReady = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Assets.Code.Remote.Flat.GameStatusChanged = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Assets.Code.Remote.Flat.GameStatusChanged}
 */
Assets.Code.Remote.Flat.GameStatusChanged.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Assets.Code.Remote.Flat.GameStatusChanged=} obj
 * @returns {Assets.Code.Remote.Flat.GameStatusChanged}
 */
Assets.Code.Remote.Flat.GameStatusChanged.getRootAsGameStatusChanged = function(bb, obj) {
  return (obj || new Assets.Code.Remote.Flat.GameStatusChanged).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {Assets.Code.Remote.Flat.GameStatus}
 */
Assets.Code.Remote.Flat.GameStatusChanged.prototype.status = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {Assets.Code.Remote.Flat.GameStatus} */ (this.bb.readInt8(this.bb_pos + offset)) : Assets.Code.Remote.Flat.GameStatus.Start;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Assets.Code.Remote.Flat.GameStatusChanged.startGameStatusChanged = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Assets.Code.Remote.Flat.GameStatus} status
 */
Assets.Code.Remote.Flat.GameStatusChanged.addStatus = function(builder, status) {
  builder.addFieldInt8(0, status, Assets.Code.Remote.Flat.GameStatus.Start);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Assets.Code.Remote.Flat.GameStatusChanged.endGameStatusChanged = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Assets.Code.Remote.Flat.RoomMsg = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Assets.Code.Remote.Flat.RoomMsg}
 */
Assets.Code.Remote.Flat.RoomMsg.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Assets.Code.Remote.Flat.RoomMsg=} obj
 * @returns {Assets.Code.Remote.Flat.RoomMsg}
 */
Assets.Code.Remote.Flat.RoomMsg.getRootAsRoomMsg = function(bb, obj) {
  return (obj || new Assets.Code.Remote.Flat.RoomMsg).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {boolean}
 */
Assets.Code.Remote.Flat.RoomMsg.bufferHasIdentifier = function(bb) {
  return bb.__has_identifier('ROOM');
};

/**
 * @returns {Assets.Code.Remote.Flat.RoomData}
 */
Assets.Code.Remote.Flat.RoomMsg.prototype.dataType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {Assets.Code.Remote.Flat.RoomData} */ (this.bb.readUint8(this.bb_pos + offset)) : Assets.Code.Remote.Flat.RoomData.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
Assets.Code.Remote.Flat.RoomMsg.prototype.data = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Assets.Code.Remote.Flat.RoomMsg.startRoomMsg = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Assets.Code.Remote.Flat.RoomData} dataType
 */
Assets.Code.Remote.Flat.RoomMsg.addDataType = function(builder, dataType) {
  builder.addFieldInt8(0, dataType, Assets.Code.Remote.Flat.RoomData.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
Assets.Code.Remote.Flat.RoomMsg.addData = function(builder, dataOffset) {
  builder.addFieldOffset(1, dataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Assets.Code.Remote.Flat.RoomMsg.endRoomMsg = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
Assets.Code.Remote.Flat.RoomMsg.finishRoomMsgBuffer = function(builder, offset) {
  builder.finish(offset, 'ROOM');
};

// Exports for Node.js and RequireJS
this.Assets = Assets;
